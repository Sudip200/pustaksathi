import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import axios  from 'axios'
import Link from 'next/link'
import { useState } from 'react'
import { useRouter } from 'next/router'
const inter = Inter({ subsets: ['latin'] })

export default function Home({data,userdetails}) {
  const router=useRouter()
  const shareData = {
    title: '',
    text: 'Check out this link:',
    url: '',
  };
  const share = async () => {
    try {
      await navigator.share(shareData);
     
    } catch (error) {
     console.log(error)
    }
  };
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.head}>
      <h1 className={styles.h1}>ShareYourNotes</h1>
      { userdetails && <h3>Welcome {userdetails.name}</h3> }
        <h3 className={styles.h3}>CheatSheets and notes available currently<br/>
        Please Fill This Form <a href='https://docs.google.com/forms/d/e/1FAIpQLSeCsgCXWN4r_c4lrdlAv1suFWBeKw_krgNu5WaUFJ0l0Fvc7Q/viewform?usp=sf_link'>Link</a>
       </h3>
       <div style={{display:'flex',flexDirection:'row',justifyContent:'center',gap:'20px'}}>
       {userdetails!='none' && <a onClick={()=>{
         router.push({
          pathname: '/dashboard',
          query: { userid:userdetails._id},
         })
        }}  style={{fontSize:'20px',textDecoration:'none',borderBottom:'2px solid blue',width:'100px',background:'white'}}>Go to DashBoard</a>}
        <Link href='/login' style={{fontSize:'20px',textDecoration:'none',borderBottom:'2px solid blue',width:'100px'}}>Login</Link>
        <Link href='/register' style={{fontSize:'20px',textDecoration:'none',borderBottom:'2px solid blue',width:'100px'}}>Register</Link>
</div>
       <p className={styles.p} id="blink" style={{animation:'blink 2s linear infinite'}}>After Clicking Download Link Please Request Access Permission .You may have to wait to get permission as its a manual process</p>
       </div>
      <div className={styles.App}>
       <div className={styles.cheatsheetcontainer}>
        {data.map((item)=>{
          return(<div className={styles.cheatsheet} style={{width:'200px' ,height:'400px',textAlign:'center'}}>
           <h3 className={styles.h3}>{item.name}</h3>
           {shareData.text=item.name}
           <a href={item.link} className={styles.a} >Download</a>
           <button id='share' onClick={share} className={styles.button}>Share</button>
          <h4 className={styles.h4}>Price:{item.price}</h4>
           <p className={styles.p}>{item.category}</p>
           <p className={styles.p}>Created By {item.author}</p>
      
           {item.verified==="yes"?<p style={{color:'green'}} className={styles.p}>verified</p>:<p style={{color:'red'}} className={styles.p}>Not verified</p>}
          </div>)
        })}
       </div>
      

    </div>
    </>
  )
}

export async function getServerSideProps({ query }) {
  
  const { user } = query;

  if(!user){
    const response = await axios.get('https://sharenote-api.onrender.com/allFiles');
    const data = response.data;
    return{
      props:{
        data,
      userdetails:'none'
      }
      
    }
  }else{
    const response = await axios.get('https://sharenote-api.onrender.com/allFiles');
    const res= await axios.get(`https://sharenote-api.onrender.com/user/${user}`)
   const userdetails=res.data
    const data = response.data;
    return{
      props:{
        data,
        userdetails
      }
      
    }
  }
  // try {
  //   const { user } = query;
    
  //   const response = await axios.get('https://sharenote-api.onrender.com/allFiles');
  //   const res= await axios.get(`https://sharenote-api.onrender.com/user/${user}`)
   
   
  //   return {
  //     props: {
  //       data,
  //       userdetails
  //     },
  //   };
  // } catch (error) {
  //   console.log(error);
  //   if(!user){
  //     return {
  //       props: {
  //         data:data,
  //         userdetails:'none'
  //       },
  //     };
  //   }
    
  // }
}


// export async function getStaticProps({query}){
//   let data;
//   const {user} =query;
//   axios.get('https://sharenote-api.onrender.com/allFiles')
//   .then((response) => {
//     //setData(response.data);
//     data=response.data
//   })
//   .catch((error) => console.log(error));
//   return {
//     props:{
//       user:user,
//       data:data
//     }
//   }
// }

